<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- 暴露接口 -->
<import resource="classpath:common/rpc/idgenerator-provider.xml" />

<!-- 读入配置属性文件 -->
<bean id="propertyBean" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <property name="locations">
        <list>
            <value>classpath:${config.prefix}config/common.properties</value>
        </list>
    </property>
</bean>
<bean id="applicationProperties" class="work.hang.dk.framework.util.ApplicationProperties">
    <property name="prop">
        <ref bean="propertyBean" />
    </property>
</bean>

<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <property name="maxTotal" value="${redis.pool.maxActive}" />
    <property name="maxIdle" value="${redis.pool.maxIdle}" />
    <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
    <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
</bean>

<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    <property name="hostName" value="${redis.ip}" />
    <property name="port" value="${redis.port}" />
    <property name="database" value="${redis.db}" />
    <property name="password" value="${redis.password}" />
    <property name="poolConfig" ref="jedisPoolConfig" />
</bean>

<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
    <property name="connectionFactory" ref="jedisConnectionFactory" />
    <property name="keySerializer">
        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
    </property>
    <property name="hashKeySerializer">
        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
    </property>
</bean>
<!-- 日志切面 -->
<bean id="logAspectBean" class="work.hang.dk.framework.log.LoggingAspect" />

<aop:config proxy-target-class="false">
    <aop:aspect ref="logAspectBean">
        <!-- 定义切入点 -->
        <aop:pointcut id="logAspect" expression="execution(public work.hang.dk.framework.bean.RemoteParameter work.hang.dk.generator.*.*(..))" />

        <!-- 环绕通知 -->
        <aop:around method="aroundMethod" pointcut-ref="logAspect" />
    </aop:aspect>
</aop:config>

<bean id="threadService" class="work.hang.dk.framework.thread.ThreadService" />

<!-- 采用注释的方式配置bean -->
<context:annotation-config />

<!-- 配置要扫描的包 -->
<context:component-scan base-package="work.hang.dk.generator" />
</beans>